// /data/data/com.termux/files/home/beginnerinvestorhub/tools/apps/web/src/app/layout.tsx

import type { Metadata } from 'next';
import { Inter } from 'next/font/google'; // Example: Using Google Fonts
import './globals.css'; // Import global CSS here

// Assuming these components exist in apps/web/src/components/common or packages/ui
// If they are in packages/ui, remember your tsconfig.json path aliases
import Navigation from '@/components/common/Navigation'; // Or @beginnerinvestorhub/ui/Navigation if moved
import Footer from '@/components/common/Footer';     // Or @beginnerinvestorhub/ui/Footer if moved

// Initialize your primary font (e.g., Inter from Google Fonts)
const inter = Inter({ subsets: ['latin'], variable: '--font-inter' });

// Define metadata for the entire application
export const metadata: Metadata = {
  title: 'Beginner Investor Hub',
  description: 'Your ultimate guide to starting your investment journey.',
  // You can add more metadata here, like Open Graph, Twitter cards, etc.
  // icons: {
  //   icon: '/favicon.ico', // Next.js automatically looks for favicon.ico in /public
  // },
};

interface RootLayoutProps {
  children: React.ReactNode;
}

export default function RootLayout({ children }: RootLayoutProps) {
  return (
    <html lang="en" className={inter.variable}>
      <head>
        {/*
          You might add global meta tags or analytics scripts here if not handled by Next.js metadata.
          For favicons, Next.js handles /favicon.ico automatically.
          For more complex favicon sets (generated by RealFaviconGenerator), you'd put the <link> tags here.
        */}
      </head>
      <body className="min-h-screen flex flex-col">
        {/*
          Navigation component (assuming it provides links to different sections)
          It might be sticky or fixed, depending on your design.
        */}
        <Navigation />

        {/*
          Main content area - `children` will be the content of the current page.
          Use flex-grow to make content fill available space between header and footer.
        */}
        <main className="flex-grow">
          {children}
        </main>

        {/* Footer component */}
        <Footer />
      </body>
    </html>
  );
}

