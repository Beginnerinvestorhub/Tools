name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      CI: true
      NODE_ENV: test
      # Add secrets via GitHub repo settings for production
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
      FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
      JWT_SECRET: ${{ secrets.TEST_JWT_SECRET || 'test_jwt_secret_for_pr' }}
      ALLOWED_ORIGINS: http://localhost:3000
      API_KEY_NUDGE_ENGINE: ${{ secrets.TEST_API_KEY_NUDGE_ENGINE || 'test_nudge_key_for_pr' }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      FRONTEND_URL: http://localhost:3000
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
      NEXT_PUBLIC_API_BASE_URL: http://localhost:4000
      NEXT_PUBLIC_GOOGLE_ANALYTICS_ID: ${{ secrets.TEST_GA_ID || 'test-ga-id-for-pr' }}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
      NUDGE_ENGINE_API_KEY: ${{ secrets.TEST_NUDGE_ENGINE_API_KEY || 'test_nudge_key_for_pr' }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci
      - name: Install backend dependencies
        run: |
          cd backend
          npm ci
      - name: Install python-engine dependencies
        run: |
          cd python-engine
          pip install -r requirements.txt
      - name: Lint frontend
        run: |
          cd frontend
          npm run lint
      - name: Lint backend
        run: |
          cd backend
          npm run lint
      - name: Test frontend
        run: |
          cd frontend
          npm run test -- --watchAll=false
      - name: Test backend
        run: |
          cd backend
          npm run test -- --watchAll=false
      - name: Test python-engine
        run: |
          cd python-engine
          pytest
      - name: Build frontend
        run: |
          cd frontend
          npm run build
      - name: Build backend
        run: |
          cd backend
          npm run build
      # Add deploy steps here if desired
