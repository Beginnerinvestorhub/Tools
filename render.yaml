databases:
  - name: investment_hub_db
    databaseName: investment_hub
    user: investment_hub_user
    plan: free

services:
  - type: web
    name: backend
    rootDir: backend
    env: docker
    dockerfilePath: Dockerfile
    healthCheckPath: /api/health
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: investment_hub_db
          property: connectionString
      - key: REDIS_URL
        sync: false # Set this secret in the Render Dashboard
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 4000
      - key: JWT_SECRET
        generateValue: true
      - key: FRONTEND_URL
        value: https://your-app.vercel.app
      - key: ALLOWED_ORIGINS
        sync: false # e.g., https://your-app.vercel.app,http://localhost:3000
      - key: FIREBASE_PROJECT_ID
        sync: false
      - key: FIREBASE_CLIENT_EMAIL
        sync: false
      - key: FIREBASE_PRIVATE_KEY
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_WEBHOOK_SECRET
        generateValue: true
      - key: ALPHA_VANTAGE_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: API_KEY_NUDGE_ENGINE
        generateValue: true
  - type: web
    name: python-engine
    env: docker
    rootDir: python-engine
    dockerfilePath: Dockerfile
    healthCheckPath: /
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: investment_hub_db
          property: connectionString
      - key: REDIS_URL
        sync: false # Set this secret in the Render Dashboard
      - key: CORS_ORIGINS
        sync: false # e.g., https://your-app.vercel.app,http://localhost:3000
      - key: OPENAI_API_KEY
        sync: false
      - key: ANTHROPIC_API_KEY
        sync: false
      - key: NUDGE_ENGINE_SECRET
        generateValue: true
      - key: ALPHA_VANTAGE_API_KEY
        sync: false
      - key: FINANCIAL_MODELING_PREP_API_KEY
        sync: false
      - key: HOST
        value: 0.0.0.0
      - key: PORT
        value: 8000
  - type: web
    name: ai-microservice
    env: docker
    rootDir: ai-microservice # Assumes your code is in an 'ai-microservice' directory
    dockerfilePath: Dockerfile # Assumes a Dockerfile exists in 'ai-microservice/'
    healthCheckPath: / # Or your specific health check endpoint
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: investment_hub_db
          property: connectionString
      - key: REDIS_URL
        sync: false # Set this secret in the Render Dashboard
      - key: OPENAI_API_KEY
        sync: false # Set this secret in the Render Dashboard
      - key: PORT
        value: 8001 # Using a different port to avoid conflicts
      - key: DEBUG
        value: false
