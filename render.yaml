# render.yaml
#
# Render Blueprint for Beginner Investor Hub backend

databases:
  - name: investment-hub-db
    databaseName: investment_hub
    user: investment_hub_user
    plan: free

# Redis is hosted externally via redis.com
# No redis section needed

services:
  # ----------------------------------------------------------------------
  # Main Backend API Gateway (Node.js)
  # ----------------------------------------------------------------------
  - type: web
    name: backend-api
    env: docker
    # Build from the monorepo root to give Docker access to the entire workspace
    rootDir: .
    # Specify the path to the Dockerfile from the root
    dockerfilePath: ./tools/services/backend-api/Dockerfile
    healthCheckPath: /health
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: investment-hub-db
          property: connectionString
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 4000
      - fromGroup: backend-secrets
      - fromGroup: shared-secrets

  # ----------------------------------------------------------------------
  # Risk Calculation Engine (Python)
  # ----------------------------------------------------------------------
  - type: web
    name: risk-calculation-engine
    env: docker
    # Build from the monorepo root to access shared files
    rootDir: .
    # Provide the full path to the Dockerfile from the root
    dockerfilePath: ./tools/services/risk-calculation-engine/Dockerfile
    healthCheckPath: /health
    envVars:
      - key: SERVICE_NAME
        value: risk-calculation-engine
      - key: DATABASE_URL
        fromDatabase:
          name: investment-hub-db
          property: connectionString
      - fromGroup: shared-secrets
      - fromGroup: financial-api-keys

  # ----------------------------------------------------------------------
  # Market Data Ingestion Service (Python)
  # ----------------------------------------------------------------------
  - type: web
    name: market-data-ingestion
    env: docker
    # Build from the monorepo root to access shared files
    rootDir: .
    dockerfilePath: ./tools/services/market-data-ingestion/Dockerfile
    healthCheckPath: /health
    envVars:
      - key: SERVICE_NAME
        value: market-data-ingestion
      - key: DATABASE_URL
        fromDatabase:
          name: investment-hub-db
          property: connectionString
      - fromGroup: shared-secrets
      - fromGroup: financial-api-keys

  # ----------------------------------------------------------------------
  # AI Microservice (Python)
  # ----------------------------------------------------------------------
  - type: web
    name: ai-microservice
    env: docker
    # Build from the monorepo root to access shared files
    rootDir: .
    dockerfilePath: ./tools/services/ai-microservice/Dockerfile
    healthCheckPath: /health
    envVars:
      - key: SERVICE_NAME
        value: ai-microservice
      - key: DATABASE_URL
        fromDatabase:
          name: investment-hub-db
          property: connectionString
      - fromGroup: shared-secrets
      - fromGroup: ai-secrets

# Environment groups for managing secrets securely and centrally
envVarGroups:
  - name: backend-secrets
    envVars:
      - key: JWT_SECRET
        generateValue: true
      - key: FIREBASE_PROJECT_ID
        sync: false
      - key: FIREBASE_PRIVATE_KEY
        sync: false
      - key: FIREBASE_CLIENT_EMAIL
        sync: false

  - name: shared-secrets
    envVars:
      - key: REDIS_URL
        value: <your-external-redis-url>

  - name: ai-secrets
    envVars:
      - key: OPENAI_API_KEY
        sync: false
      - key: ANTHROPIC_API_KEY
        sync: false

  - name: financial-api-keys
    envVars:
      - key: ALPHA_VANTAGE_API_KEY
        sync: false
      - key: POLYGON_API_KEY
        sync: false
